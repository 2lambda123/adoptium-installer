NODE_LABEL = "dockerBuild&&linux&&x64" // Dynamic docker machines from Azure

pipeline {
    agent {
        label NODE_LABEL
    }
    stages {
        stage('Linux Installers') {
            matrix {
                agent {
                    label NODE_LABEL
                }
                tools {
                    jdk "JDK11"
                }
                axes {
                    axis {
                        name 'DISTRO'
                        values 'Debian', 'RedHat', 'Suse'
                    }
                }
                stages {
                    stage('Build Installer') {
                        steps {
                            echo "Installer Job for Temurin ${VERSION} - ${DISTRO}"
                            setup()
                            dir('linuxNew') {
                                buildAndTest()
                            }
                            uploadArtifacts()
                        }
                    }
                }
            }
        }
    }
}

def setup() {
    cleanWs()
    // Docker --mount option requires BuildKit
    env.DOCKER_BUILDKIT=1
    env._JAVA_OPTIONS="-Xmx4g"
    checkout scm
}

def buildAndTest() {
    switch(JDK_SOURCE) {
        case "upstream":
            break;
        case "customized":
            break;
        default: //Adoptium API 
            break;
    }
    // Install Adoptium GPG key for RPM signing
    withCredentials([file(credentialsId: 'adoptium-artifactory-gpg-key', variable: 'GPG_KEY')]) {
        if (DISTRO != "Debian") {
            sh("./gradlew packageJdk${DISTRO} checkJdk${DISTRO} --parallel -PPRODUCT=${PRODUCT} -PPRODUCT_VERSION=${VERSION} -PGPG_KEY=${GPG_KEY} || true")
        } else {
            sh("./gradlew packageJdk${DISTRO} checkJdk${DISTRO} --parallel -PPRODUCT=${PRODUCT} -PPRODUCT_VERSION=${VERSION} || true")
        }
    }
    archiveArtifacts artifacts: '**/build/ospackage/*,**/build/reports/**,**/packageTest/dependencies/deb/*'
}

def uploadArtifacts() {
    echo "tests"
}
