NODE_LABEL = "dockerBuild&&linux&&x64" // Dynamic docker machines from Azure

pipeline {
    agent {
        label NODE_LABEL
    }
    tools {
        jdk "JDK11"
    }
    stages {
        stage('Linux Installers') {
            matrix {
                agent {
                    label NODE_LABEL
                }
                axes {
                    axis {
                        name 'VERSION'
                        values 8, 11, 17
                    }
                }
                stages {
                    stage("Temurin ${VERSION}") {
                        steps {
                            setup()
                            dir('linuxNew') {
                                buildAndTest(VERSION)
                            }
                            uploadArtifacts()
                        }
                    }
                }
            }
        }
    }
}

def setup() {
    cleanWs()
    if (PLATFORM == "aarch64") {
        env.TESTCONTAINERS_RYUK_DISABLED=true
        env.TESTCONTAINERS_CHECKS_DISABLE=true
    }
    env._JAVA_OPTIONS="-Xmx4g"
    checkout scm
}

def buildAndTest(version) {
    switch(JDK_SOURCE) {
        case "upstream":
            break;
        case "customized":
            break;
        default: //Adoptium API 
            break;
    }
    for (os in ["Debian", "RedHat", "Suse"]) {
        sh("./gradlew packageJdk${os} checkJdk${os} --parallel -PPRODUCT=${PRODUCT} -PPRODUCT_VERSION=${version}")
    }
    archiveArtifacts artifacts: '**/*/build/ospackage/*,**/*/build/reports/**'
}

def uploadArtifacts() {
    echo "tests"
}
